@mixin font_size($prefix: 'font-size', $children: '', $rangeStart: 18, $rangeEnd: 28, $increment: 2) {
  @while $rangeStart <= $rangeEnd {
    .#{$prefix}-#{$rangeStart} #{$children} {
      font-size: #{$rangeStart}px;
      line-height: #{$rangeStart}px;
    }
    $rangeStart: $rangeStart + $increment;
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-font($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;

  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }

  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;

    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }

  @if $fallback {
    font-size: $fallback;
  }

  font-size: $responsive;
}

@mixin gradient($top, $bottom) {
  background-color: $top;
  background-repeat: repeat-x;
  background: -moz-linear-gradient(top, $top 0%, $bottom 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $top), color-stop(100%, $bottom));
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%);
  background: -o-linear-gradient(top, $top, $bottom);
  background: -ms-linear-gradient(top, $top 0%, $bottom 100%);
  background: linear-gradient(to bottom, $top, $bottom);
}

@mixin gradient-left-right($left, $right) {
  background-color: $left;
  background-repeat: repeat-x;
  background: -moz-linear-gradient(left, $left 0%, $right 100%);
  background: -webkit-gradient(linear, left top, right top, color-stop(0%, $left), color-stop(100%, $right));
  background: -webkit-linear-gradient(left, $left 0%, $right 100%);
  background: -o-linear-gradient(left, $left, $right);
  background: -ms-linear-gradient(left, $left 0%, $right 100%);
  background: linear-gradient(to right, $left, $right);
}

@mixin horgradient($color, $opacity) {
  $rgba: rgba($color, $opacity);
  $rgbtrans: rgba($color, 0);
  background-color: $rgba;
  background: -moz-linear-gradient(left, $rgbtrans 0%, $rgba 30%, $rgba 70%, $rgbtrans 100%);
  background: -webkit-gradient(
    linear,
    left top,
    right top,
    color-stop(0%, $rgbtrans),
    color-stop(30%, $rgba),
    color-stop(70%, $rgba),
    color-stop(100%, $rgbtrans)
  );
  background: -webkit-linear-gradient(left, $rgbtrans 0%, $rgba 30%, $rgba 70%, $rgbtrans 100%);
  background: -o-linear-gradient(left, $rgbtrans 0%, $rgba 30%, $rgba 70%, $rgbtrans 100%);
  background: -ms-linear-gradient(left, $rgbtrans 0%, $rgba 30%, $rgba 70%, $rgbtrans 100%);
  background: linear-gradient(to right, $rgbtrans 0%, $rgba 30%, $rgba 70%, $rgbtrans 100%);
}

@mixin horgradientright($color, $opacity) {
  $rgba: rgba($color, $opacity);
  $rgbtrans: rgba($color, 0);
  background-color: $rgba;
  background: -moz-linear-gradient(left, $rgba 0%, $rgba 0%, $rgbtrans 100%);
  background: -webkit-gradient(
    linear,
    left top,
    right top,
    color-stop(0%, $rgba),
    color-stop(0%, $rgba),
    color-stop(100%, $rgbtrans)
  );
  background: -webkit-linear-gradient(left, $rgba 0%, $rgba 0%, $rgbtrans 100%);
  background: -o-linear-gradient(left, $rgba 0%, $rgba 0%, $rgbtrans 100%);
  background: -ms-linear-gradient(left, $rgba 0%, $rgba 0%, $rgbtrans 100%);
  background: linear-gradient(to right, $rgba 0%, $rgba 0%, $rgbtrans 100%);
}

@mixin horgradientleft($color, $opacity) {
  $rgba: rgba($color, $opacity);
  $rgbtrans: rgba($color, 0);
  background-color: $rgba;
  background: -moz-linear-gradient(left, $rgbtrans 0%, $rgbtrans 0%, $rgba 0%);
  background: -webkit-gradient(
    linear,
    left top,
    right top,
    color-stop(0%, $rgbtrans),
    color-stop(0%, $rgbtrans),
    color-stop(100%, $rgba)
  );
  background: -webkit-linear-gradient(left, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
  background: -o-linear-gradient(left, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
  background: -ms-linear-gradient(left, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
  background: linear-gradient(to right, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
}

@mixin horgradienttop($color, $opacity) {
  $rgba: rgba($color, $opacity);
  $rgbtrans: rgba($color, 0);
  background-color: $rgba;
  background: -moz-linear-gradient(top, $rgbtrans 0%, $rgbtrans 0%, $rgba 0%);
  background: -webkit-gradient(
    linear,
    left top,
    left bottom,
    color-stop(0%, $rgbtrans),
    color-stop(0%, $rgbtrans),
    color-stop(100%, $rgba)
  );
  background: -webkit-linear-gradient(top, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
  background: -o-linear-gradient(top, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
  background: -ms-linear-gradient(top, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
  background: linear-gradient(to bottom, $rgbtrans 0%, $rgbtrans 0%, $rgba 100%);
}

@mixin diagonal-top-bottom($top, $bottom, $top-percent: 0%, $bottom-percent: 100%) {
  background-color: $top;
  background-repeat: repeat-x;
  background: -moz-linear-gradient(-45deg, $top $top-percent, $bottom $bottom-percent);
  background: -webkit-gradient(
    -45deg,
    left top,
    left bottom,
    color-stop($top-percent, $top),
    color-stop($bottom-percent, $bottom)
  );
  background: -webkit-linear-gradient(-45deg, $top $top-percent, $bottom $bottom-percent);
  background: -o-linear-gradient(-45deg, $top $top-percent, $bottom $bottom-percent);
  background: -ms-linear-gradient(-45deg, $top $top-percent, $bottom $bottom-percent);
  background: linear-gradient(135deg, $top $top-percent, $bottom $bottom-percent);
}

@mixin metalgradient() {
  background: rgb(187, 187, 187);
  background: -moz-linear-gradient(
    top,
    rgba(187, 187, 187, 1) 0%,
    rgba(187, 187, 187, 1) 47%,
    rgba(103, 103, 103, 1) 53%,
    rgba(103, 103, 103, 1) 100%
  );
  background: -webkit-gradient(
    linear,
    left top,
    left bottom,
    color-stop(0%, rgba(187, 187, 187, 1)),
    color-stop(47%, rgba(187, 187, 187, 1)),
    color-stop(53%, rgba(103, 103, 103, 1)),
    color-stop(100%, rgba(103, 103, 103, 1))
  );
  background: -webkit-linear-gradient(
    top,
    rgba(187, 187, 187, 1) 0%,
    rgba(187, 187, 187, 1) 47%,
    rgba(103, 103, 103, 1) 53%,
    rgba(103, 103, 103, 1) 100%
  );
  background: -o-linear-gradient(
    top,
    rgba(187, 187, 187, 1) 0%,
    rgba(187, 187, 187, 1) 47%,
    rgba(103, 103, 103, 1) 53%,
    rgba(103, 103, 103, 1) 100%
  );
  background: -ms-linear-gradient(
    top,
    rgba(187, 187, 187, 1) 0%,
    rgba(187, 187, 187, 1) 47%,
    rgba(103, 103, 103, 1) 53%,
    rgba(103, 103, 103, 1) 100%
  );
  background: linear-gradient(
    to bottom,
    rgba(187, 187, 187, 1) 0%,
    rgba(187, 187, 187, 1) 47%,
    rgba(103, 103, 103, 1) 53%,
    rgba(103, 103, 103, 1) 100%
  );
}

@mixin backgroundGradientWithImage($top, $bottom, $imagePath) {
  background-color: $top;
  background-image: url($imagePath);
  background-repeat: repeat-x;
  background:
    url($imagePath),
    -moz-linear-gradient(top, $top 0%, $bottom 100%);
  background:
    url($imagePath),
    -webkit-gradient(linear, left top, left bottom, color-stop(0%, $top), color-stop(100%, $bottom));
  background:
    url($imagePath),
    -webkit-linear-gradient(top, $top 0%, $bottom 100%);
  background:
    url($imagePath),
    -o-linear-gradient(top, $top, $bottom);
  background:
    url($imagePath),
    -ms-linear-gradient(top, $top 0%, $bottom 100%);
  background: url($imagePath), linear-gradient(to bottom, $top, $bottom);
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ', '};
    }
  }
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin list-padding($position, $value) {
  -moz-padding-#{$position}: $value;
  -webkit-padding-#{$position}: $value;
  -khtml-padding-#{$position}: $value;
  -o-padding-#{$position}: $value;
}

@mixin placeholder-color($color, $opacity: 1) {
  &::-webkit-input-placeholder {
    color: $color;
    opacity: $opacity;
  }
  &:-moz-placeholder {
    color: $color;
    opacity: $opacity;
  }
  &::-moz-placeholder {
    color: $color;
    opacity: $opacity;
  }
  &:-ms-input-placeholder {
    color: $color;
    opacity: $opacity;
  }
}

@mixin position($directions) {
  @each $direction, $value in $directions {
    #{$direction}: $value;
  }
}

@mixin absolute($directions) {
  @include position($directions);
  position: absolute;
}

@mixin relative($directions) {
  @include position($directions);
  position: relative;
}

@mixin fixed($directions) {
  @include position($directions);
  position: fixed;
}

@mixin centering($from: top, $amount: 50%, $sides: undefined) {
  $translation: null;

  @if $from == top {
    $translation: translateY($amount * -1);
  } @else if $from == bottom {
    $translation: translateY($amount);
  } @else if $from == left {
    $translation: translateX($amount * -1);
  } @else if $from == right {
    $translation: translateX($amount);
  } @else if $from == both {
    $translation: translate(($amount * -1), ($amount * -1));
  }

  transform: $translation;
  -webkit-transform: $translation;
  -moz-transform: $translation;
  -o-transform: $translation;
  -ms-transform: $translation;
  position: absolute;

  @if $from == both {
    top: $amount;
    left: $amount;
  } @else {
    #{$from}: $amount;
  }

  @if ($sides != undefined) {
    $thesides: $sides;

    @each $side, $value in $thesides {
      #{$side}: $value;
    }
  }
}

$browser-context: 14;
@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

@function get-mobile-size($value) {
  $raw-value: $value / ($value * 0 + 1);
  $mobile-size: 30px !default;
  @if $raw-value > 10 {
    $mobile-size: ($raw-value - 20) + px;
  } @else {
    $mobile-size: ($raw-value - 1) + em;
  }
  @return $mobile-size;
}

@mixin pz-font-defaults(
  $font-family: $heading-font,
  $color: #fff,
  $weight: bold,
  $line-height: normal,
  $align: center
) {
  .personalizer-wrap {
    color: $color;
    font-family: $font-family;
    text-align: $align;

    @for $i from 1 through 6 {
      h#{$i},
      h#{$i} a,
      a h#{$i} {
        color: $color;
        font-weight: $weight;
        line-height: $line-height;
      }
    }

    h1 {
      font-size: 4.172rem;
    }

    h2 {
      font-size: 3.338rem;
    }

    h3 {
      font-size: 2.67rem;
    }

    h4 {
      font-size: 2.136rem;
    }

    h5 {
      font-size: 1.709em;
    }

    h6 {
      font-size: 1.367em;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      @media (max-width: 768px) {
        font-size: 1.709em;
      }
    }

    @content;
  }
}

@mixin rotate($degrees) {
  -moz-transform: rotate($degrees);
  -webkit-transform: rotate($degrees);
  transform: rotate($degrees);
  filter: progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
  zoom: 1;
}

%tab-right {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);

  -webkit-transform-origin: bottom right;
  -ms-transform-origin: bottom right;
  transform-origin: bottom right;

  right: 0;
  left: auto !important;
}

%tab-left {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);

  -webkit-transform-origin: bottom left;
  -ms-transform-origin: bottom left;
  transform-origin: bottom left;

  left: 0;
  right: auto !important;
}

@mixin save-compare-tab-base() {
  display: inline-block;
  position: fixed;
  z-index: 500;
  line-height: 1;
  padding: 15px 20px;
  letter-spacing: 1px;
  width: auto;
  margin-bottom: 0;
  top: 50%;

  &.position-right {
    @extend %tab-right;
  }

  &.position-left {
    @extend %tab-left;
  }
}

@mixin scrollbars($size: auto, $foreground-color: null, $background-color: null) {
  $fg: null;
  $bg: null;

  @if type_of($foreground-color) == color {
    $fg: $foreground-color;
  } @else {
    $fg: #{$foreground-color};
  }

  @if type_of($background-color) == color {
    $bg: $background-color;
  } @else {
    $bg: #{$background-color};
  }

  @if ($fg) and ($bg) {
    scrollbar-color: $fg $bg;
  }

  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-track {
    background-color: $bg;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $fg;
  }
}

$site-builder-enabled: false !default;

@mixin site-builder($brand) {
  @if $brand == chevy {
    $primary: #b6862d !global;
    $primaryhover: #8d6823 !global;
    $secondary: #262626 !global;
    $secondaryhover: #0d0d0d !global;
    $cta: #808080 !global;
    $ctahover: #676767 !global;

    $maintextfont: 'Roboto', sans-serif !global;
    $heading-font: 'Louis', sans-serif !global;
  }

  .content {
    .sidebar.vertical {
      border: none;
      background: none;
      padding: 0;
      margin: 0;
      li.widget {
        padding: 20px 15px;
        background: #eee;
        border: none;
        .dealer-info {
          h3 {
            display: none;
          }
          .widget-subtitle {
            background: #fff;
          }
          ul {
            line-height: 1.875rem;
          }
          a {
            color: $primary;
          }
        }
      }
    }
  }
  @media (min-width: 1025px) {
    .contentcontainer {
      padding-top: 30px;
    }
    #di-page-composer.contentcontainer {
      padding-top: 0;
    }
  }
}

$twitter: #222222;
$facebook: #3b5998;
$googleplus: #dd4b39;
$pinterest: #cb2027;
$linkedin: #007bb6;
$youtube: #bb0000;
$vimeo: #aad450;
$tumblr: #32506d;
$instagram: #517fa4;
$flickr: #ff0084;
$dribbble: #ea4c89;
$quora: #a82400;
$foursquare: #0072b1;
$forrst: #5b9a68;
$vk: #45668e;
$wordpress: #21759b;
$stumbleupon: #eb4823;
$yahoo: #7b0099;
$blogger: #fb8f3d;
$soundcloud: #ff3a00;
$dealerrater: #e45825;
$yelp: #d32323;
$tiktok: #222222;

$twitterhover: darken($twitter, 10%);
$facebookhover: darken($facebook, 10%);
$googleplushover: darken($googleplus, 10%);
$pinteresthover: darken($pinterest, 10%);
$linkedinhover: darken($linkedin, 10%);
$youtubehover: darken($youtube, 10%);
$vimeohover: darken($vimeo, 10%);
$tumblrhover: darken($tumblr, 10%);
$instagramhover: darken($instagram, 10%);
$flickrhover: darken($flickr, 10%);
$dribbblehover: darken($dribbble, 10%);
$quorahover: darken($quora, 10%);
$foursquarehover: darken($foursquare, 10%);
$forrsthover: darken($forrst, 10%);
$vkhover: darken($vk, 10%);
$wordpresshover: darken($wordpress, 10%);
$stumbleuponhover: darken($stumbleupon, 10%);
$yahoohover: darken($yahoo, 10%);
$bloggerhover: darken ($blogger, 10%);
$soundcloudhover: darken ($soundcloud, 10%);
$dealerraterhover: darken($dealerrater, 10%);
$yelphover: darken($yelp, 10%);
$tiktokhover: darken($tiktok, 10%);

@function stroke($stroke, $color) {
  $shadow: ();
  $from: $stroke * -1;
  @for $i from $from through $stroke {
    @for $j from $from through $stroke {
      $shadow: append($shadow, $i * 1px $j * 1px 0 $color, comma);
    }
  }
  @return $shadow;
}

@mixin stroke($stroke, $color) {
  text-shadow: stroke($stroke, $color);
}

@mixin transform($transform) {
  -ms-transform: $transform;
  -webkit-transform: $transform;
  transform: $transform;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin transition-2($transition, $transition-2) {
  -webkit-transition: $transition, $transition-2;
  transition: $transition, $transition-2;
}

@mixin translatez() {
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  -ms-transform: translatez(0);
  transform: translatez(0);
}

@mixin translateZ() {
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  -ms-transform: translatez(0);
  transform: translatez(0);
}

@mixin trans($color, $opacity) {
  $rgba: rgba($color, $opacity);
  background-color: $rgba;
  background: none;
  background: $rgba;
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin z-index($layer, $plus: 0) {
  $z-layers: (
    'header': 1000,
    'header-fixed': 1080,
    'modal': 1050,
    'tooltip': 1070,
    'popover': 1060,
    'mobile-overlay': 1030,
    'overlay': 1000,
    'top': 500,
    'extra-high': 400,
    'high': 300,
    'mid': 200,
    'low': 100,
    'half': 50,
    'impact': 1,
    'buried': -1,
    'third-party': -100000000000000000,
  );

  @if map-has-key($z-layers, $layer) and type-of($layer) == 'string' {
    z-index: map-get($z-layers, $layer) + $plus;
  } @else if type-of($layer) == 'number' {
    z-index: $layer;
  } @else {
    @warn "No z-index found in $z-layers map or the provided argument is not a number. Property omitted.";
  }
}

.di-z-modal,
.di-z-overlay,
.di-z-extra-high,
.di-z-high,
.di-z-mid,
.di-z-low,
.di-z-half,
.di-z-impact,
.di-z-buried {
  position: relative;
}

.di-z-modal {
  @include z-index('modal');
}

.di-z-overlay {
  @include z-index('overlay');
}

.di-z-mobile-overlay {
  @include z-index('mobile-overlay');
}

.di-z-extra-top {
  @include z-index('top');
}

.di-z-extra-high {
  @include z-index('extra-high');
}

.di-z-high {
  @include z-index('high');
}

.di-z-mid {
  @include z-index('mid');
}

.di-z-low {
  @include z-index('low');
}

.di-z-half {
  @include z-index('half');
}

.di-z-impact {
  @include z-index('impact');
}

.di-z-buried {
  @include z-index('buried');
}

iframe.iframe-responsive {
  width: 1px;
  min-width: 100%;
  *width: 100%;
}

@mixin iframehack() {
  width: 1px;
  min-width: 100%;
  *width: 100%;
}
