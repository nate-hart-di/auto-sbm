/*
build a set of font-size classes by name and font-size range
*/
@mixin font_size($prefix:'font-size',$children:'',$rangeStart:18,$rangeEnd:28,$increment:2){

  @while $rangeStart <= $rangeEnd {

    .#{$prefix}-#{$rangeStart} #{$children} {
      font-size: #{$rangeStart}px;
      line-height: #{$rangeStart}px;
    }
    $rangeStart: $rangeStart + $increment;
  }
}

//==== FLUID HEADER MIXIN =======
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-font($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

/// Resonsive Fonts - To use:
// h2{ @include responsive-font(4vw, 30px, 100px); }
// First number is the font size, second number is the font min size and last number is the max font size
// credit : https://css-tricks.com/snippets/sass/viewport-sized-typography-minimum-maximum-sizes/

@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
    $responsive-unitless: $responsive / ($responsive - $responsive + 1);
    $dimension: if(unit($responsive)=='vh', 'height', 'width');
    $min-breakpoint: $min / $responsive-unitless * 100;

    @media (max-#{$dimension}: #{$min-breakpoint}) {
        font-size: $min;
    }

    @if $max {
        $max-breakpoint: $max / $responsive-unitless * 100;

        @media (min-#{$dimension}: #{$max-breakpoint}) {
            font-size: $max;
        }
    }

    @if $fallback {
        font-size: $fallback;
    }

    font-size: $responsive;
}